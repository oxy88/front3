# import Team, Event, Category, Interest, EventType, LolTier, LolRole, PubgServer, OverwatchTier, OverwatchRole, SoccerRole, SoccerPosition, BasketBallRole, Place from "./generated/prisma.graphql"

type Query {
  user(id: ID!): User
  users: [User!]!
  event(id: ID!): Event
  events: [Event!]!
  team(id: ID!): Team
  teams: [Team!]!
  myName: String!
  myId: ID!
  myProfile: User
}

type Mutation {
  login(name: String!): AuthPayload!
  createTeam(teamName: String!, category: Category!, description: String!): Team!
  joinTeam(teamId: ID!): Team!
  createEvent(name: String, category: Category!, type: EventType!, startTime: DateTime, description: String, lat: Float, lng: Float): Event
  createScrimmage(hostTeamId: ID!, startTime: DateTime, description: String, lat: Float, lng: Float): Event!
  createInterestLol(name: String, tier: LolTier!, role: LolRole!): Interest!
  createInterestPubg(name: String, server: PubgServer!): Interest!
  createInterestOverwatch(name: String, tier: OverwatchTier!, role: OverwatchRole!): Interest!
  createInterestEtcGames(gameName: String!, name: String, stats: String): Interest!
  createInterestSoccer(description: String, role: SoccerRole, position: SoccerPosition): Interest!
  createInterestBasketBall(description: String, role: BasketBallRole): Interest!
  createInterestEtcSports(sportsName: String!, stats: String, description: String): Interest!
  createInterestAny(topic: String!, description: String): Interest!
  editIntroduction(introduction: String): User
  likeTeam(teamId: ID!): Team
  disLikeTeam(teamId: ID!): Team
  makeToken(userId: ID!): String!
}

type AuthPayload {
  token: String!
  userId: ID!
}

type User {
  id: ID!
  name: String!
  teams: [Team!]!
  events: [Event!]!
  avatarUrl: String
  interests: [Interest!]!
  introduction: String
}